name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true

jobs:
  # Linux platform testing
  linux-tests:
    name: Linux Tests
    strategy:
      matrix:
        runner:
          - ubuntu-latest  # x64
          - ubuntu-24.04   # x64 with latest packages
        arch: [x64]
        # Note: GitHub doesn't provide ARM64 Linux runners in the free tier
        # ARM64 testing would require self-hosted runners or paid GitHub Enterprise
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install Linux Development Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libc6-dev

      - name: Run Linux X64 Tests
        run: ./gradlew linuxX64Test --info

      - name: Upload Linux Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: linux-test-results-${{ matrix.runner }}
          path: |
            shared/build/test-results/
            shared/build/reports/tests/
          retention-days: 30

  # Windows (MinGW) platform testing
  windows-tests:
    name: Windows (MinGW) Tests
    strategy:
      matrix:
        os: [windows-latest, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup MinGW
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-binutils
            make

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run MinGW X64 Tests
        run: ./gradlew mingwX64Test --info
        shell: cmd

      - name: Upload Windows Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: windows-test-results-${{ matrix.os }}
          path: |
            shared/build/test-results/mingwX64Test/
            shared/build/reports/tests/mingwX64Test/
          retention-days: 30

  # Final status check
  ci-success:
    name: CI Success
    needs: [linux-tests, windows-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check CI Status
        run: |
          if [[ "${{ needs.linux-tests.result }}" == "success" &&
                "${{ needs.windows-tests.result }}" == "success" ]]; then
            echo "✅ All CI checks passed!"
            exit 0
          else
            echo "❌ Some CI checks failed!"
            echo "Linux Tests: ${{ needs.linux-tests.result }}"
            echo "Windows Tests: ${{ needs.windows-tests.result }}"
            exit 1
          fi